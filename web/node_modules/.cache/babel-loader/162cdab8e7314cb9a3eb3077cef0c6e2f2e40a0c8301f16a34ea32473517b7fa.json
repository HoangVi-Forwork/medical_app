{"ast":null,"code":"import capitalize from '../../_util/capitalize';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, genPresetColor, mergeToken } from '../../theme/internal';\nconst genTagStatusStyle = (token, status, cssVariableType) => {\n  const capitalizedCssVariableType = capitalize(cssVariableType);\n  return {\n    [`${token.componentCls}-${status}`]: {\n      color: token[`color${cssVariableType}`],\n      background: token[`color${capitalizedCssVariableType}Bg`],\n      borderColor: token[`color${capitalizedCssVariableType}Border`],\n      [`&${token.componentCls}-borderless`]: {\n        borderColor: 'transparent'\n      }\n    }\n  };\n};\nconst genPresetStyle = token => genPresetColor(token, (colorKey, _ref) => {\n  let {\n    textColor,\n    lightBorderColor,\n    lightColor,\n    darkColor\n  } = _ref;\n  return {\n    [`${token.componentCls}-${colorKey}`]: {\n      color: textColor,\n      background: lightColor,\n      borderColor: lightBorderColor,\n      // Inverse color\n      '&-inverse': {\n        color: token.colorTextLightSolid,\n        background: darkColor,\n        borderColor: darkColor\n      },\n      [`&${token.componentCls}-borderless`]: {\n        borderColor: 'transparent'\n      }\n    }\n  };\n});\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal,\n    componentCls\n  } = token;\n  const paddingInline = tagPaddingHorizontal - lineWidth;\n  const iconMarginInline = paddingXXS - lineWidth;\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: token.tagLineHeight,\n      whiteSpace: 'nowrap',\n      background: token.defaultBg,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: `all ${token.motionDurationMid}`,\n      textAlign: 'start',\n      // RTL\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.defaultColor\n      },\n      [`${componentCls}-close-icon`]: {\n        marginInlineStart: iconMarginInline,\n        color: token.colorTextDescription,\n        fontSize: token.tagIconSize,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [`&${componentCls}-has-color`]: {\n        borderColor: 'transparent',\n        [`&, a, a:hover, ${token.iconCls}-close, ${token.iconCls}-close:hover`]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [`&-checkable`]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [`&:not(${componentCls}-checkable-checked):hover`]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [`&-hidden`]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [`> ${token.iconCls} + span, > span + ${token.iconCls}`]: {\n        marginInlineStart: paddingInline\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent',\n      background: token.tagBorderlessBg\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tag', token => {\n  const {\n    lineWidth,\n    fontSizeIcon\n  } = token;\n  const tagFontSize = token.fontSizeSM;\n  const tagLineHeight = `${token.lineHeightSM * tagFontSize}px`;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8,\n    tagBorderlessBg: token.colorFillTertiary\n  });\n  return [genBaseStyle(tagToken), genPresetStyle(tagToken), genTagStatusStyle(tagToken, 'success', 'Success'), genTagStatusStyle(tagToken, 'processing', 'Info'), genTagStatusStyle(tagToken, 'error', 'Error'), genTagStatusStyle(tagToken, 'warning', 'Warning')];\n}, token => ({\n  defaultBg: token.colorFillQuaternary,\n  defaultColor: token.colorText\n}));","map":{"version":3,"names":["capitalize","resetComponent","genComponentStyleHook","genPresetColor","mergeToken","genTagStatusStyle","token","status","cssVariableType","capitalizedCssVariableType","componentCls","color","background","borderColor","genPresetStyle","colorKey","_ref","textColor","lightBorderColor","lightColor","darkColor","colorTextLightSolid","genBaseStyle","paddingXXS","lineWidth","tagPaddingHorizontal","paddingInline","iconMarginInline","Object","assign","display","height","marginInlineEnd","marginXS","fontSize","tagFontSize","lineHeight","tagLineHeight","whiteSpace","defaultBg","border","lineType","colorBorder","borderRadius","borderRadiusSM","opacity","transition","motionDurationMid","textAlign","direction","defaultColor","marginInlineStart","colorTextDescription","tagIconSize","cursor","colorTextHeading","iconCls","backgroundColor","colorPrimary","colorFillSecondary","colorPrimaryHover","colorPrimaryActive","tagBorderlessBg","fontSizeIcon","fontSizeSM","lineHeightSM","tagToken","colorFillTertiary","colorFillQuaternary","colorText"],"sources":["/Users/hoang/Desktop/DoAn/medical_app/web/node_modules/antd/es/tag/style/index.js"],"sourcesContent":["import capitalize from '../../_util/capitalize';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, genPresetColor, mergeToken } from '../../theme/internal';\nconst genTagStatusStyle = (token, status, cssVariableType) => {\n  const capitalizedCssVariableType = capitalize(cssVariableType);\n  return {\n    [`${token.componentCls}-${status}`]: {\n      color: token[`color${cssVariableType}`],\n      background: token[`color${capitalizedCssVariableType}Bg`],\n      borderColor: token[`color${capitalizedCssVariableType}Border`],\n      [`&${token.componentCls}-borderless`]: {\n        borderColor: 'transparent'\n      }\n    }\n  };\n};\nconst genPresetStyle = token => genPresetColor(token, (colorKey, _ref) => {\n  let {\n    textColor,\n    lightBorderColor,\n    lightColor,\n    darkColor\n  } = _ref;\n  return {\n    [`${token.componentCls}-${colorKey}`]: {\n      color: textColor,\n      background: lightColor,\n      borderColor: lightBorderColor,\n      // Inverse color\n      '&-inverse': {\n        color: token.colorTextLightSolid,\n        background: darkColor,\n        borderColor: darkColor\n      },\n      [`&${token.componentCls}-borderless`]: {\n        borderColor: 'transparent'\n      }\n    }\n  };\n});\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal,\n    componentCls\n  } = token;\n  const paddingInline = tagPaddingHorizontal - lineWidth;\n  const iconMarginInline = paddingXXS - lineWidth;\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: token.tagLineHeight,\n      whiteSpace: 'nowrap',\n      background: token.defaultBg,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: `all ${token.motionDurationMid}`,\n      textAlign: 'start',\n      // RTL\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.defaultColor\n      },\n      [`${componentCls}-close-icon`]: {\n        marginInlineStart: iconMarginInline,\n        color: token.colorTextDescription,\n        fontSize: token.tagIconSize,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [`&${componentCls}-has-color`]: {\n        borderColor: 'transparent',\n        [`&, a, a:hover, ${token.iconCls}-close, ${token.iconCls}-close:hover`]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [`&-checkable`]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [`&:not(${componentCls}-checkable-checked):hover`]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [`&-hidden`]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [`> ${token.iconCls} + span, > span + ${token.iconCls}`]: {\n        marginInlineStart: paddingInline\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent',\n      background: token.tagBorderlessBg\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tag', token => {\n  const {\n    lineWidth,\n    fontSizeIcon\n  } = token;\n  const tagFontSize = token.fontSizeSM;\n  const tagLineHeight = `${token.lineHeightSM * tagFontSize}px`;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8,\n    tagBorderlessBg: token.colorFillTertiary\n  });\n  return [genBaseStyle(tagToken), genPresetStyle(tagToken), genTagStatusStyle(tagToken, 'success', 'Success'), genTagStatusStyle(tagToken, 'processing', 'Info'), genTagStatusStyle(tagToken, 'error', 'Error'), genTagStatusStyle(tagToken, 'warning', 'Warning')];\n}, token => ({\n  defaultBg: token.colorFillQuaternary,\n  defaultColor: token.colorText\n}));"],"mappings":"AAAA,OAAOA,UAAU,MAAM,wBAAwB;AAC/C,SAASC,cAAc,QAAQ,aAAa;AAC5C,SAASC,qBAAqB,EAAEC,cAAc,EAAEC,UAAU,QAAQ,sBAAsB;AACxF,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,EAAEC,eAAe,KAAK;EAC5D,MAAMC,0BAA0B,GAAGT,UAAU,CAACQ,eAAe,CAAC;EAC9D,OAAO;IACL,CAAE,GAAEF,KAAK,CAACI,YAAa,IAAGH,MAAO,EAAC,GAAG;MACnCI,KAAK,EAAEL,KAAK,CAAE,QAAOE,eAAgB,EAAC,CAAC;MACvCI,UAAU,EAAEN,KAAK,CAAE,QAAOG,0BAA2B,IAAG,CAAC;MACzDI,WAAW,EAAEP,KAAK,CAAE,QAAOG,0BAA2B,QAAO,CAAC;MAC9D,CAAE,IAAGH,KAAK,CAACI,YAAa,aAAY,GAAG;QACrCG,WAAW,EAAE;MACf;IACF;EACF,CAAC;AACH,CAAC;AACD,MAAMC,cAAc,GAAGR,KAAK,IAAIH,cAAc,CAACG,KAAK,EAAE,CAACS,QAAQ,EAAEC,IAAI,KAAK;EACxE,IAAI;IACFC,SAAS;IACTC,gBAAgB;IAChBC,UAAU;IACVC;EACF,CAAC,GAAGJ,IAAI;EACR,OAAO;IACL,CAAE,GAAEV,KAAK,CAACI,YAAa,IAAGK,QAAS,EAAC,GAAG;MACrCJ,KAAK,EAAEM,SAAS;MAChBL,UAAU,EAAEO,UAAU;MACtBN,WAAW,EAAEK,gBAAgB;MAC7B;MACA,WAAW,EAAE;QACXP,KAAK,EAAEL,KAAK,CAACe,mBAAmB;QAChCT,UAAU,EAAEQ,SAAS;QACrBP,WAAW,EAAEO;MACf,CAAC;MACD,CAAE,IAAGd,KAAK,CAACI,YAAa,aAAY,GAAG;QACrCG,WAAW,EAAE;MACf;IACF;EACF,CAAC;AACH,CAAC,CAAC;AACF,MAAMS,YAAY,GAAGhB,KAAK,IAAI;EAC5B,MAAM;IACJiB,UAAU;IACVC,SAAS;IACTC,oBAAoB;IACpBf;EACF,CAAC,GAAGJ,KAAK;EACT,MAAMoB,aAAa,GAAGD,oBAAoB,GAAGD,SAAS;EACtD,MAAMG,gBAAgB,GAAGJ,UAAU,GAAGC,SAAS;EAC/C,OAAO;IACL;IACA,CAACd,YAAY,GAAGkB,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE5B,cAAc,CAACK,KAAK,CAAC,CAAC,EAAE;MACtEwB,OAAO,EAAE,cAAc;MACvBC,MAAM,EAAE,MAAM;MACdC,eAAe,EAAE1B,KAAK,CAAC2B,QAAQ;MAC/BP,aAAa;MACbQ,QAAQ,EAAE5B,KAAK,CAAC6B,WAAW;MAC3BC,UAAU,EAAE9B,KAAK,CAAC+B,aAAa;MAC/BC,UAAU,EAAE,QAAQ;MACpB1B,UAAU,EAAEN,KAAK,CAACiC,SAAS;MAC3BC,MAAM,EAAG,GAAElC,KAAK,CAACkB,SAAU,MAAKlB,KAAK,CAACmC,QAAS,IAAGnC,KAAK,CAACoC,WAAY,EAAC;MACrEC,YAAY,EAAErC,KAAK,CAACsC,cAAc;MAClCC,OAAO,EAAE,CAAC;MACVC,UAAU,EAAG,OAAMxC,KAAK,CAACyC,iBAAkB,EAAC;MAC5CC,SAAS,EAAE,OAAO;MAClB;MACA,CAAE,IAAGtC,YAAa,MAAK,GAAG;QACxBuC,SAAS,EAAE;MACb,CAAC;MACD,eAAe,EAAE;QACftC,KAAK,EAAEL,KAAK,CAAC4C;MACf,CAAC;MACD,CAAE,GAAExC,YAAa,aAAY,GAAG;QAC9ByC,iBAAiB,EAAExB,gBAAgB;QACnChB,KAAK,EAAEL,KAAK,CAAC8C,oBAAoB;QACjClB,QAAQ,EAAE5B,KAAK,CAAC+C,WAAW;QAC3BC,MAAM,EAAE,SAAS;QACjBR,UAAU,EAAG,OAAMxC,KAAK,CAACyC,iBAAkB,EAAC;QAC5C,SAAS,EAAE;UACTpC,KAAK,EAAEL,KAAK,CAACiD;QACf;MACF,CAAC;MACD,CAAE,IAAG7C,YAAa,YAAW,GAAG;QAC9BG,WAAW,EAAE,aAAa;QAC1B,CAAE,kBAAiBP,KAAK,CAACkD,OAAQ,WAAUlD,KAAK,CAACkD,OAAQ,cAAa,GAAG;UACvE7C,KAAK,EAAEL,KAAK,CAACe;QACf;MACF,CAAC;MACD,CAAE,aAAY,GAAG;QACfoC,eAAe,EAAE,aAAa;QAC9B5C,WAAW,EAAE,aAAa;QAC1ByC,MAAM,EAAE,SAAS;QACjB,CAAE,SAAQ5C,YAAa,2BAA0B,GAAG;UAClDC,KAAK,EAAEL,KAAK,CAACoD,YAAY;UACzBD,eAAe,EAAEnD,KAAK,CAACqD;QACzB,CAAC;QACD,qBAAqB,EAAE;UACrBhD,KAAK,EAAEL,KAAK,CAACe;QACf,CAAC;QACD,WAAW,EAAE;UACXoC,eAAe,EAAEnD,KAAK,CAACoD,YAAY;UACnC,SAAS,EAAE;YACTD,eAAe,EAAEnD,KAAK,CAACsD;UACzB;QACF,CAAC;QACD,UAAU,EAAE;UACVH,eAAe,EAAEnD,KAAK,CAACuD;QACzB;MACF,CAAC;MACD,CAAE,UAAS,GAAG;QACZ/B,OAAO,EAAE;MACX,CAAC;MACD;MACA,CAAE,KAAIxB,KAAK,CAACkD,OAAQ,qBAAoBlD,KAAK,CAACkD,OAAQ,EAAC,GAAG;QACxDL,iBAAiB,EAAEzB;MACrB;IACF,CAAC,CAAC;IACF,CAAE,GAAEhB,YAAa,aAAY,GAAG;MAC9BG,WAAW,EAAE,aAAa;MAC1BD,UAAU,EAAEN,KAAK,CAACwD;IACpB;EACF,CAAC;AACH,CAAC;AACD;AACA,eAAe5D,qBAAqB,CAAC,KAAK,EAAEI,KAAK,IAAI;EACnD,MAAM;IACJkB,SAAS;IACTuC;EACF,CAAC,GAAGzD,KAAK;EACT,MAAM6B,WAAW,GAAG7B,KAAK,CAAC0D,UAAU;EACpC,MAAM3B,aAAa,GAAI,GAAE/B,KAAK,CAAC2D,YAAY,GAAG9B,WAAY,IAAG;EAC7D,MAAM+B,QAAQ,GAAG9D,UAAU,CAACE,KAAK,EAAE;IACjC6B,WAAW;IACXE,aAAa;IACbgB,WAAW,EAAEU,YAAY,GAAG,CAAC,GAAGvC,SAAS;IACzCC,oBAAoB,EAAE,CAAC;IACvBqC,eAAe,EAAExD,KAAK,CAAC6D;EACzB,CAAC,CAAC;EACF,OAAO,CAAC7C,YAAY,CAAC4C,QAAQ,CAAC,EAAEpD,cAAc,CAACoD,QAAQ,CAAC,EAAE7D,iBAAiB,CAAC6D,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC,EAAE7D,iBAAiB,CAAC6D,QAAQ,EAAE,YAAY,EAAE,MAAM,CAAC,EAAE7D,iBAAiB,CAAC6D,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE7D,iBAAiB,CAAC6D,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;AACnQ,CAAC,EAAE5D,KAAK,KAAK;EACXiC,SAAS,EAAEjC,KAAK,CAAC8D,mBAAmB;EACpClB,YAAY,EAAE5C,KAAK,CAAC+D;AACtB,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}