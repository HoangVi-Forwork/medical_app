[{"/Users/hoang/DOAN/medical_app/web/src/index.js":"1","/Users/hoang/DOAN/medical_app/web/src/App.js":"2","/Users/hoang/DOAN/medical_app/web/src/reportWebVitals.js":"3","/Users/hoang/DOAN/medical_app/web/src/components/Appmax.js":"4","/Users/hoang/DOAN/medical_app/web/src/components/login/login.js":"5","/Users/hoang/DOAN/medical_app/web/src/components/blog/Blog.jsx":"6","/Users/hoang/DOAN/medical_app/web/src/components/blog/app_blog.jsx":"7","/Users/hoang/DOAN/medical_app/web/src/components/blog/EdittorConfig.jsx":"8","/Users/hoang/DOAN/medical_app/web/src/components/login/Signup.jsx":"9","/Users/hoang/DOAN/medical_app/web/src/components/blog/detail.jsx":"10","/Users/hoang/DOAN/medical_app/web/src/components/blog/editbenh.jsx":"11"},{"size":628,"mtime":1691251007635,"results":"12","hashOfConfig":"13"},{"size":587,"mtime":1691251007627,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1691251007635,"results":"15","hashOfConfig":"13"},{"size":7643,"mtime":1691624883332,"results":"16","hashOfConfig":"13"},{"size":4358,"mtime":1691251007634,"results":"17","hashOfConfig":"13"},{"size":5730,"mtime":1691624061247,"results":"18","hashOfConfig":"13"},{"size":10653,"mtime":1691462714637,"results":"19","hashOfConfig":"13"},{"size":996,"mtime":1691251007633,"results":"20","hashOfConfig":"13"},{"size":11460,"mtime":1691619608690,"results":"21","hashOfConfig":"13"},{"size":2212,"mtime":1691627387573,"results":"22","hashOfConfig":"13"},{"size":12534,"mtime":1691627971539,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"jmpkty",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hoang/DOAN/medical_app/web/src/index.js",[],[],[],"/Users/hoang/DOAN/medical_app/web/src/App.js",["61","62"],[],"import React, { useState } from 'react';\nimport { Route, Routes } from \"react-router-dom\";\nimport Login from './components/login/login';\nimport LoginComponent from './components/login/Signup.jsx'\nimport AppBlog from './components/Appmax.js';\nimport './App.css';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  return (\n    <div>\n      <Routes>\n        <Route path=\"/\" element={<Login />}/>  \n        <Route path='/User/*' element={<AppBlog />}/>\n        <Route path=\"/Dangky\" element={<LoginComponent />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n\n","/Users/hoang/DOAN/medical_app/web/src/reportWebVitals.js",[],[],"/Users/hoang/DOAN/medical_app/web/src/components/Appmax.js",["63","64","65","66","67"],[],"/Users/hoang/DOAN/medical_app/web/src/components/login/login.js",["68","69","70","71","72"],[],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\nimport '../../assets/css/login.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction Login() {\n    const [showPassword, setShowPassword] = useState(false);\n    const [loginStatus, setLoginStatus] = useState(\"\");\n    const togglePasswordVisibility = () => { setShowPassword(!showPassword) };\n    const passwordInputType = showPassword ? 'text' : 'password';\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [token, setToken] = useState('');\n      const handleLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Gửi yêu cầu đăng nhập tới server\n      const response = await axios.post('http://localhost:5090/loginto', {\n        email,\n        password,\n      });\n      const { token } = response.data;\n      // Lưu token vào state và localStorage\n      setToken(token);\n      localStorage.setItem('token', token);\n      window.location.href = '/User/blog';\n    } catch (error) {\n      console.error(error.response.data.message);\n      setErrorMessage(error.response.data.message);\n    }\n  };\n    return (\n        <div className=\"maincontainer \">\n            <div className=\"container-fluid\">\n                <div className=\"row no-gutter\">\n                    {/* <div className=\"col-md-6 d-none d-md-flex bg-image\"></div> */}\n                    <div className=\"col-md-0 bg-image\">\n                        <div className=\"login d-flex align-items-center py-5\">\n                            <div className=\"container \">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-10 col-xl-7 mx-auto\">\n                                        <h3 className=\"display-8 text-primary log_in_text\">Split login page!</h3>\n                                        <h5 className=\"display-8 text-primary log_in_text\">{errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}</h5>\n                                        <form>\n                                            <div className=\"mb-3\">\n                                            <label className='test'>Email</label>\n                                                <input onChange={(e) => { setEmail(e.target.value)}} type=\"email\" placeholder=\"Email address\" className=\"form-control input_login rounded-pill border-0 shadow-sm px-4\" />\n                                            </div>\n                                            <div className=\"mb-3\">\n                                            <label className='test'>Password</label>\n                                                <input type={passwordInputType} name=\"password\" value={password} className=\"input_login form-control rounded-pill border-0 shadow-sm px-4 text-primary form-control-pass\" onChange={(e) => { setPassword(e.target.value)}} />\n                                                <p className='password-toggle-icon' onClick={togglePasswordVisibility}>\n                                                    {showPassword ? <EyeOutlined /> : <EyeInvisibleOutlined />}\n                                                </p>\n                                            </div>\n                                            <div className=\"form-check\">\n                                                {/* <input id=\"customCheck1\" type=\"checkbox\" checked className=\"form-check-input\" /> */}\n                                                {/* <label for=\"customCheck1\" className=\"form-check-label\">Remember password</label> */}\n                                            </div>\n                                            <div className=\"d-grid gap-2 mt-2\">\n                                                <button onClick={handleLogin} className=\"btn btn-primary\">Sign in</button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n};\n\nexport default Login;\n\n","/Users/hoang/DOAN/medical_app/web/src/components/blog/Blog.jsx",["73","74","75","76"],[],"/Users/hoang/DOAN/medical_app/web/src/components/blog/app_blog.jsx",["77","78","79"],[],"import React, { useState, useEffect } from 'react';\nimport JoditEditor from 'jodit-react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Axios from 'axios';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Modal, Form, Input, Select, Upload, message } from 'antd';\nimport { editorConfig } from './EdittorConfig';\nimport '../../assets/css/blog.css';\nimport { Link } from 'react-router-dom';\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst getBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n\nconst App_blog = () => {\n  const [editorContent, setEditorContent] = useState('');\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [tenbenh, settenbenh] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('');\n  const [previewImage, setPreviewImage] = useState('');\n  const [hinhanh, sethinhanh] = useState('');\n  const [trieuchung, settrieuchung] = useState('');\n  const [nguyennhan, setnguyennhan] = useState('');\n  const [phongngua, setphongngua] = useState('');\n  const [noidung, setnoidung] = useState('');\n  const [idLoaibenh, setidLoaibenh] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [tenrieng, settenrieng] = useState('');\n\n\n  const handleImageUpload2 = async (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('upload_preset', 'aoxxeyys');\n    try {\n      const response = await Axios.post(\n        'https://api.cloudinary.com/v1_1/drhcszyj0/image/upload',\n        formData\n      );\n      if (response.status === 200) {\n        const imgBlog = response.data.secure_url;\n        sethinhanh(imgBlog);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleEditorChange = (newContent) => {\n    setEditorContent(newContent);\n  };\n  const normFile = (e) => {\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n  const handleFileChange02 = (e) => {\n    const file = e.target.files[0];\n    handleImageUpload2(file);\n  };\n  const handleCancel = () => setPreviewOpen(false);\n  const handlePreview = async (file) => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n    setPreviewImage(file.url || file.preview);\n    setPreviewOpen(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n  };\n  // \n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    handleImageUpload(file);\n  };\n  const handleImageUpload = async (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('upload_preset', 'aoxxeyys');\n    try {\n      const response = await Axios.post(\n        'https://api.cloudinary.com/v1_1/drhcszyj0/image/upload',\n        formData\n      );\n      if (response.status === 200) {\n        const imageUrl = response.data.secure_url;\n        const imageTag = `<img src=\"${imageUrl}\" alt=\"\" />`;\n        const newContent = editorContent + imageTag;\n        setEditorContent(newContent);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleVideoUpload = async (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('upload_preset', 'aoxxeyys');\n    try {\n      const response = await Axios.post(\n        'https://api.cloudinary.com/v1_1/drhcszyj0/video/upload',\n        formData\n      );\n      if (response.status === 200) {\n        const videoUrl = response.data.secure_url;\n        const videoTag = `<video style=\"width: 700px\"; src=\"${videoUrl}\" controls/>`;\n        const newContent = editorContent + videoTag;\n        setEditorContent(newContent);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleVideoChange = (e) => {\n    const file = e.target.files[0];\n    handleVideoUpload(file);\n  };\n  const handleSubmit = async () => {\n    try {\n      // Send data to the Node.js server\n      const response = await Axios.post('http://localhost:5090/api/thembenh', {\n        tenbenh,\n        hinhanh,\n        trieuchung,\n        nguyennhan,\n        phongngua,\n        noidung: editorContent,\n        idLoaibenh,\n        tenrieng, // You can set the value of tenrieng here if needed.\n      });\n\n      // Handle success response\n      if (response.status === 200) {\n        message.success('Data inserted successfully.');\n        // Clear the form after successful submission\n        settenbenh('');\n        sethinhanh('');\n        settrieuchung('');\n        setnguyennhan('');\n        setphongngua('');\n        setnoidung('');\n        setidLoaibenh('');\n        settenrieng('');\n        setEditorContent('');\n      }\n    } catch (error) {\n      // Handle error response\n      console.error('Error inserting data:', error);\n      message.error('An error occurred while inserting data.');\n    }\n  };\n\n  const [selectOptions, setSelectOptions] = useState([]);\n\n  // Fetch the data for the <Select> options from the server\n  // useEffect(() => {\n  //   const fetchSelectOptions = async () => {\n  //     try {\n  //       const response = await Axios.get('http://localhost:5090/api/loaibenhs'); // Replace with the appropriate API endpoint to get the options\n  //       if (response.status === 200) {\n  //         setSelectOptions(response.data); // Assuming the response data is an array of objects with `value` and `label` properties\n  //       }\n  //     } catch (error) {\n  //       console.error('Error fetching select options:', error);\n  //     }\n  //   };\n  //   fetchSelectOptions();\n  // }, []);\n\n  useEffect(() => {\n    Axios.get('http://localhost:5090/api/loaibenhs')\n      .then((response) => {\n        setSelectOptions(response.data);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  const handState = (value) => {\n    setidLoaibenh(value);\n  };\n\n  const handngyennhan = (value) => {\n    setnguyennhan(value);\n  };\n\n  const handphongngua = (value) => {\n    setphongngua(value);\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-10 m-auto\">\n          <div className=\"card card-body mt-5\">\n            <h2 className=\"text-center\">Create a Blog</h2>\n            <div className=\"form-group\">\n              <label>Title Blog</label>\n              <Form.Item>\n                <Input type=\"text\" placeholder=\"Blog title\" value={tenbenh} onChange={(e) => settenbenh(e.target.value)} required />\n              </Form.Item>\n            </div>\n            <div className=\"form-group\">\n              <label>ten reigng</label>\n              <Form.Item>\n                <Input type=\"text\" placeholder=\"Blog title\" value={tenrieng} onChange={(e) => settenrieng(e.target.value)} required />\n              </Form.Item>\n            </div>\n            <div className=\"form-group\">\n              <label>Trạng thái</label>\n              <Form.Item>\n                <Select onChange={handState} value={idLoaibenh} placeholder=\"Chọn trạng thái\">\n                  {selectOptions.map((option) => (\n                    <Option key={option.idLoaibenh} value={option.idLoaibenh}>\n                      {option.tenloaibenh}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </div>\n            <div className=\"form-group\">\n              <label>Img Blog</label>\n              <Form.Item valuePropName=\"fileList\" getValueFromEvent={normFile} onChange={handleFileChange02}>\n                <Upload src={hinhanh} listType=\"picture-card\" className=\"avatar-uploader\" maxCount={1} beforeUpload={handleFileChange02} onPreview={handlePreview}>\n                  <div>\n                    <PlusOutlined />\n                    <div style={{ marginTop: 8, }} > Img Blog </div>\n                  </div>\n                </Upload>\n                <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\n                  <img alt=\"example\" style={{ width: '100%', }} src={previewImage} />\n                </Modal>\n              </Form.Item>\n            </div>\n            <div className=\"form-group\">\n              <label>Triệu chứng</label>\n              <TextArea rows={4} className=\"form-control\" placeholder=\"Enter description\" value={trieuchung} onChange={(e) => settrieuchung(e.target.value)} required />\n            </div>\n            <div className=\"form-group\">\n              <label>Nguyên nhân</label>\n              <JoditEditor rows={4} className=\"form-control\" placeholder=\"Enter description\" value={nguyennhan} onChange={handngyennhan} required />\n            </div>\n            <div className=\"form-group\">\n              <label>Phòng ngừa</label>\n              <JoditEditor rows={4} className=\"form-control\" placeholder=\"Enter description\" value={phongngua} onChange={handphongngua} required />\n            </div>\n            <div className=\"form-group\">\n              <label>Nội dung</label>\n              <Form.Item onChange={handleFileChange} valuePropName=\"fileList\" getValueFromEvent={normFile}>\n                <Upload src={imageUrl} listType=\"picture-card\" className=\"avatar-uploader\" beforeUpload={handleFileChange} onPreview={handlePreview}>\n                  <div>\n                    <PlusOutlined />\n                    <div style={{ marginTop: 8, }} >\n                      <label>Img</label>\n                    </div>\n                  </div>\n                </Upload>\n                <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\n                  <img alt=\"example\" style={{ width: '100%', }} src={previewImage} />\n                </Modal>\n              </Form.Item>\n              <Form.Item valuePropName=\"fileList\" getValueFromEvent={normFile} onChange={handleVideoChange}>\n                <Upload className=\"avatar-uploader\" listType=\"picture-card\" beforeUpload={handleVideoChange}>\n                  <div>\n                    <PlusOutlined />\n                    <div style={{ marginTop: 8 }}>Video</div>\n                  </div>\n                </Upload>\n              </Form.Item>\n              <JoditEditor value={editorContent} config={editorConfig} onChange={handleEditorChange} />\n            </div>\n            <div className=\"form-group\">\n              <button className=\"btn btn-primary\" onClick={handleSubmit}>\n                Create Blog\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App_blog","/Users/hoang/DOAN/medical_app/web/src/components/blog/EdittorConfig.jsx",[],[],"/Users/hoang/DOAN/medical_app/web/src/components/login/Signup.jsx",["80","81","82","83","84","85"],[],"/Users/hoang/DOAN/medical_app/web/src/components/blog/detail.jsx",["86"],[],"/Users/hoang/DOAN/medical_app/web/src/components/blog/editbenh.jsx",["87","88","89","90","91"],[],{"ruleId":"92","severity":1,"message":"93","line":9,"column":10,"nodeType":"94","messageId":"95","endLine":9,"endColumn":18},{"ruleId":"92","severity":1,"message":"96","line":9,"column":20,"nodeType":"94","messageId":"95","endLine":9,"endColumn":31},{"ruleId":"92","severity":1,"message":"97","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":33},{"ruleId":"92","severity":1,"message":"98","line":4,"column":25,"nodeType":"94","messageId":"95","endLine":4,"endColumn":37},{"ruleId":"92","severity":1,"message":"99","line":4,"column":76,"nodeType":"94","messageId":"95","endLine":4,"endColumn":102},{"ruleId":"92","severity":1,"message":"100","line":38,"column":9,"nodeType":"94","messageId":"95","endLine":38,"endColumn":17},{"ruleId":"92","severity":1,"message":"101","line":58,"column":10,"nodeType":"94","messageId":"95","endLine":58,"endColumn":22},{"ruleId":"92","severity":1,"message":"102","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"103","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":14},{"ruleId":"92","severity":1,"message":"104","line":11,"column":12,"nodeType":"94","messageId":"95","endLine":11,"endColumn":23},{"ruleId":"92","severity":1,"message":"105","line":11,"column":25,"nodeType":"94","messageId":"95","endLine":11,"endColumn":39},{"ruleId":"92","severity":1,"message":"106","line":17,"column":12,"nodeType":"94","messageId":"95","endLine":17,"endColumn":17},{"ruleId":"92","severity":1,"message":"107","line":5,"column":24,"nodeType":"94","messageId":"95","endLine":5,"endColumn":38},{"ruleId":"92","severity":1,"message":"108","line":9,"column":9,"nodeType":"94","messageId":"95","endLine":9,"endColumn":17},{"ruleId":"92","severity":1,"message":"109","line":19,"column":10,"nodeType":"94","messageId":"95","endLine":19,"endColumn":20},{"ruleId":"92","severity":1,"message":"110","line":55,"column":9,"nodeType":"94","messageId":"95","endLine":55,"endColumn":18},{"ruleId":"92","severity":1,"message":"103","line":9,"column":10,"nodeType":"94","messageId":"95","endLine":9,"endColumn":14},{"ruleId":"92","severity":1,"message":"111","line":30,"column":10,"nodeType":"94","messageId":"95","endLine":30,"endColumn":17},{"ruleId":"92","severity":1,"message":"112","line":32,"column":20,"nodeType":"94","messageId":"95","endLine":32,"endColumn":31},{"ruleId":"92","severity":1,"message":"103","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":14},{"ruleId":"92","severity":1,"message":"113","line":7,"column":46,"nodeType":"94","messageId":"95","endLine":7,"endColumn":53},{"ruleId":"92","severity":1,"message":"108","line":11,"column":9,"nodeType":"94","messageId":"95","endLine":11,"endColumn":17},{"ruleId":"92","severity":1,"message":"114","line":26,"column":10,"nodeType":"94","messageId":"95","endLine":26,"endColumn":23},{"ruleId":"92","severity":1,"message":"115","line":26,"column":25,"nodeType":"94","messageId":"95","endLine":26,"endColumn":41},{"ruleId":"92","severity":1,"message":"116","line":32,"column":9,"nodeType":"94","messageId":"95","endLine":32,"endColumn":32},{"ruleId":"92","severity":1,"message":"103","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":14},{"ruleId":"92","severity":1,"message":"103","line":10,"column":10,"nodeType":"94","messageId":"95","endLine":10,"endColumn":14},{"ruleId":"92","severity":1,"message":"117","line":25,"column":12,"nodeType":"94","messageId":"95","endLine":25,"endColumn":24},{"ruleId":"92","severity":1,"message":"118","line":26,"column":12,"nodeType":"94","messageId":"95","endLine":26,"endColumn":24},{"ruleId":"92","severity":1,"message":"119","line":33,"column":12,"nodeType":"94","messageId":"95","endLine":33,"endColumn":20},{"ruleId":"92","severity":1,"message":"112","line":33,"column":22,"nodeType":"94","messageId":"95","endLine":33,"endColumn":33},"no-unused-vars","'loggedIn' is assigned a value but never used.","Identifier","unusedVar","'setLoggedIn' is assigned a value but never used.","'Router' is defined but never used.","'UserOutlined' is defined but never used.","'DeliveredProcedureOutlined' is defined but never used.","'location' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'loginStatus' is assigned a value but never used.","'setLoginStatus' is assigned a value but never used.","'token' is assigned a value but never used.","'SearchOutlined' is defined but never used.","'TextArea' is assigned a value but never used.","'idLoaibenh' is assigned a value but never used.","'handState' is assigned a value but never used.","'noidung' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'message' is defined but never used.","'Enterpassword' is assigned a value but never used.","'setEnterpassword' is assigned a value but never used.","'togglePasswordVisibilit' is assigned a value but never used.","'previewTitle' is assigned a value but never used.","'previewImage' is assigned a value but never used.","'imageUrl' is assigned a value but never used."]