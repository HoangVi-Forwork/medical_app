[{"/Users/hoang/DOAN/medical_app/web/src/index.js":"1","/Users/hoang/DOAN/medical_app/web/src/App.js":"2","/Users/hoang/DOAN/medical_app/web/src/reportWebVitals.js":"3","/Users/hoang/DOAN/medical_app/web/src/components/Appmax.js":"4","/Users/hoang/DOAN/medical_app/web/src/components/login/login.js":"5","/Users/hoang/DOAN/medical_app/web/src/components/blog/Blog.jsx":"6","/Users/hoang/DOAN/medical_app/web/src/components/blog/app_blog.jsx":"7","/Users/hoang/DOAN/medical_app/web/src/components/blog/EdittorConfig.jsx":"8","/Users/hoang/DOAN/medical_app/web/src/components/login/Signup.jsx":"9"},{"size":628,"mtime":1691251007635,"results":"10","hashOfConfig":"11"},{"size":587,"mtime":1691251007627,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1691251007635,"results":"13","hashOfConfig":"11"},{"size":7404,"mtime":1691251007632,"results":"14","hashOfConfig":"11"},{"size":4358,"mtime":1691251007634,"results":"15","hashOfConfig":"11"},{"size":4162,"mtime":1691487460379,"results":"16","hashOfConfig":"11"},{"size":10653,"mtime":1691462714637,"results":"17","hashOfConfig":"11"},{"size":996,"mtime":1691251007633,"results":"18","hashOfConfig":"11"},{"size":6426,"mtime":1691251007634,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"jmpkty",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"23"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"23"},"/Users/hoang/DOAN/medical_app/web/src/index.js",[],[],[],"/Users/hoang/DOAN/medical_app/web/src/App.js",["53","54"],[],"import React, { useState } from 'react';\nimport { Route, Routes } from \"react-router-dom\";\nimport Login from './components/login/login';\nimport LoginComponent from './components/login/Signup.jsx'\nimport AppBlog from './components/Appmax.js';\nimport './App.css';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  return (\n    <div>\n      <Routes>\n        <Route path=\"/\" element={<Login />}/>  \n        <Route path='/User/*' element={<AppBlog />}/>\n        <Route path=\"/Dangky\" element={<LoginComponent />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n\n","/Users/hoang/DOAN/medical_app/web/src/reportWebVitals.js",[],[],"/Users/hoang/DOAN/medical_app/web/src/components/Appmax.js",["55","56","57","58","59"],[],"import { BrowserRouter as Router, Routes, Route, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Breadcrumb, Layout, Menu, theme } from 'antd';\nimport { InboxOutlined, UserOutlined, ContainerOutlined, AppstoreOutlined, DeliveredProcedureOutlined, ClusterOutlined, LogoutOutlined, LoginOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../assets/css/blog.css';\nimport '../assets/css/style.css';\nimport Blog from '../components/blog/Blog.jsx'\nimport Appblog from '../components/blog/app_blog.jsx'\n// import '../App.css'\n// import Login from './/login/login';\n// import Blogdetail from './blog/Blog_detail.js';\n// import Addblog from './blog/Add_blog';\n// import Editblog from './blog/Edit.js';\n// import Edit from './blog/Edit.js';\n\nconst { Content, Sider } = Layout;\nfunction App() {\n  const [collapsed, setCollapsed] = useState(false);\n  const { token: { colorBgContainer } } = theme.useToken();\n\n  const rootSubmenuKeys = ['sub1', 'sub2', 'sub4', 'sub5'];\n  const [openKeys, setOpenKeys] = useState(['sub1']);\n\n  const onOpenChange = (keys) => {\n    const latestOpenKey = keys.find((key) => openKeys.indexOf(key) === -1);\n    if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n      setOpenKeys(keys);\n    } else {\n      setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\n    }\n  };\n  const location = useLocation();\n  const history = useNavigate();\n  const [user, setUser] = useState(null);\n  // useEffect(() => {\n  //   const userData = localStorage.getItem('user');\n  //   if (userData) {\n  //     const parsedUser = JSON.parse(userData);\n  //     setUser(parsedUser);\n  //   } else {\n  //     setUser(null);\n  //     localStorage.removeItem('user');\n  //     history('/User')\n  //   }\n  // }, [history]);\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n    history('/');\n  };\n  const [token, setToken] = useState('');;\n  const [errorMessage, setErrorMessage] = useState('');\n\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n\n    if (storedToken) {\n      setToken(storedToken);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (token) {\n      axios.get('http://localhost:5090/profile', {\n        headers: {\n          Authorization: token,\n        },\n      })\n        .then((response) => {\n          const { user } = response.data;\n          setUser(user);\n        })\n        .catch((error) => {\n          console.error('Đã xảy ra lỗi:', error);\n          setErrorMessage('Đã xảy ra lỗi. Vui lòng thử lại sau.');\n        });\n    } else {\n      setUser(null);\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        localStorage.removeItem('token');\n      }\n    }\n  }, [token]);\n  return (\n    <div>\n      <Layout>\n        <Sider collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)} style={{\n          position: 'fixed',\n          height: '100%',\n          zIndex: 1,\n          overflow: 'auto', // Added overflow property\n          left: 0,\n        }}>\n          <div className=\"demo-logo-vertical\" />\n          {user &&\n            <div>\n              <img className=\"menu-item avatar bg-primary text-white w-10 h-10 mb-2\" size={54} src={user.avatar} alt='' />\n              <p className='span-item'>{user.email}</p>\n            </div>}\n          <Menu theme=\"dark\" defaultSelectedKeys={['']} mode=\"inline\" openKeys={openKeys} onOpenChange={onOpenChange}>\n            <Menu.SubMenu key=\"sub2\" icon={<AppstoreOutlined style={{ fontSize: '19px', }} />} title=\"Blog New\" >\n              <Menu.Item key=\"1\" icon={<ContainerOutlined />}>\n                <Link style={{ textDecoration: 'none' }} to=\"blog\">Blog</Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\" icon={<InboxOutlined />}>\n                <Link style={{ textDecoration: 'none' }} to=\"app_blog\">Add Blog</Link>\n              </Menu.Item>\n            </Menu.SubMenu>\n          </Menu>\n          {user !== null &&\n            <Menu theme=\"dark\" defaultSelectedKeys={['0']} mode=\"inline\" openKeys={openKeys} onOpenChange={onOpenChange} style={{ fontSize: '15px', }} title=\"Đang xuat\">\n              <Menu.Item key=\"sub1\" icon={<LogoutOutlined style={{ fontSize: '19px', }} />}>\n                <Link onClick={handleLogout} style={{ textDecoration: 'none' }} to=\"/\">Account transfer</Link>\n              </Menu.Item>\n            </Menu>\n          }\n          {user === null &&\n            <Menu theme=\"dark\" defaultSelectedKeys={['0']} mode=\"inline\" openKeys={openKeys} onOpenChange={onOpenChange} style={{ fontSize: '15px', }}>\n              <Menu.Item key=\"sub1\" icon={<LoginOutlined style={{ fontSize: '19px', }} />}>\n                <Link style={{ textDecoration: 'none' }} to=\"/\">Log In </Link>\n              </Menu.Item>\n            </Menu>\n          }\n        </Sider>\n        <Layout style={{ marginLeft: collapsed ? 80 : 200 }}>\n          <Content style={{ margin: '0 16px', }} >\n            <Breadcrumb style={{ margin: '16px 0' }}>\n              <Breadcrumb.Item><ClusterOutlined /></Breadcrumb.Item>\n              <Breadcrumb.Item>{window.location.pathname.substring(1)}</Breadcrumb.Item>\n            </Breadcrumb>\n            <div style={{ padding: 24, minHeight: 500, background: colorBgContainer }}>\n              {/* <Routes location={location}> */}\n              {/* <Route path=\"/login\" element={<Login />} />\n                <Route path=\"/blog\" element={<Blog />} />\n                <Route path=\"/blog/:id\" element={<Blogdetail />} />\n                <Route path=\"/app_blog\" element={<Addblog />} />\n                <Route path=\"/edit_blog\" element={<Editblog />} />\n                <Route path=\"/edit/:id\" element={<Edit />} /> */}\n              {/* </Routes> */}\n              <Routes>\n                  <Route path=\"/blog\" element={<Blog />} />\n                  <Route path=\"/app_blog\" element={<Appblog />} />\n              </Routes>\n            </div>\n          </Content>\n        </Layout>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// function UserDataComponent() {\n//   const [email, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [token, setToken] = useState('');\n//   const [user, setUser] = useState(null);\n//   const [errorMessage, setErrorMessage] = useState('');\n\n//   useEffect(() => {\n//     const storedToken = localStorage.getItem('token');\n\n//     if (storedToken) {\n//       setToken(storedToken);\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     if (token) {\n//       // Lấy thông tin tài khoản từ server khi có token\n//       axios.get('http://localhost:5090/profile', {\n//         headers: {\n//           Authorization: token,\n//         },\n//       })\n//         .then((response) => {\n//           const { user } = response.data;\n//           setUser(user);\n//         })\n//         .catch((error) => {\n//           console.error('Đã xảy ra lỗi:', error);\n//           setErrorMessage('Đã xảy ra lỗi. Vui lòng thử lại sau.');\n//         });\n//     } else {\n//       setUser(null);\n//     }\n//   }, [token]);\n\n\n//   return (\n//     <div>\n\n//     </div>\n//   );\n// }\n\n// export default UserDataComponent;\n\n","/Users/hoang/DOAN/medical_app/web/src/components/login/login.js",["60","61","62","63","64"],[],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\nimport '../../assets/css/login.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction Login() {\n    const [showPassword, setShowPassword] = useState(false);\n    const [loginStatus, setLoginStatus] = useState(\"\");\n    const togglePasswordVisibility = () => { setShowPassword(!showPassword) };\n    const passwordInputType = showPassword ? 'text' : 'password';\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [token, setToken] = useState('');\n      const handleLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Gửi yêu cầu đăng nhập tới server\n      const response = await axios.post('http://localhost:5090/loginto', {\n        email,\n        password,\n      });\n      const { token } = response.data;\n      // Lưu token vào state và localStorage\n      setToken(token);\n      localStorage.setItem('token', token);\n      window.location.href = '/User/blog';\n    } catch (error) {\n      console.error(error.response.data.message);\n      setErrorMessage(error.response.data.message);\n    }\n  };\n    return (\n        <div className=\"maincontainer \">\n            <div className=\"container-fluid\">\n                <div className=\"row no-gutter\">\n                    {/* <div className=\"col-md-6 d-none d-md-flex bg-image\"></div> */}\n                    <div className=\"col-md-0 bg-image\">\n                        <div className=\"login d-flex align-items-center py-5\">\n                            <div className=\"container \">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-10 col-xl-7 mx-auto\">\n                                        <h3 className=\"display-8 text-primary log_in_text\">Split login page!</h3>\n                                        <h5 className=\"display-8 text-primary log_in_text\">{errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}</h5>\n                                        <form>\n                                            <div className=\"mb-3\">\n                                            <label className='test'>Email</label>\n                                                <input onChange={(e) => { setEmail(e.target.value)}} type=\"email\" placeholder=\"Email address\" className=\"form-control input_login rounded-pill border-0 shadow-sm px-4\" />\n                                            </div>\n                                            <div className=\"mb-3\">\n                                            <label className='test'>Password</label>\n                                                <input type={passwordInputType} name=\"password\" value={password} className=\"input_login form-control rounded-pill border-0 shadow-sm px-4 text-primary form-control-pass\" onChange={(e) => { setPassword(e.target.value)}} />\n                                                <p className='password-toggle-icon' onClick={togglePasswordVisibility}>\n                                                    {showPassword ? <EyeOutlined /> : <EyeInvisibleOutlined />}\n                                                </p>\n                                            </div>\n                                            <div className=\"form-check\">\n                                                {/* <input id=\"customCheck1\" type=\"checkbox\" checked className=\"form-check-input\" /> */}\n                                                {/* <label for=\"customCheck1\" className=\"form-check-label\">Remember password</label> */}\n                                            </div>\n                                            <div className=\"d-grid gap-2 mt-2\">\n                                                <button onClick={handleLogin} className=\"btn btn-primary\">Sign in</button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n};\n\nexport default Login;\n\n","/Users/hoang/DOAN/medical_app/web/src/components/blog/Blog.jsx",["65","66"],[],"/Users/hoang/DOAN/medical_app/web/src/components/blog/app_blog.jsx",["67","68","69"],[],"import React, { useState, useEffect } from 'react';\nimport JoditEditor from 'jodit-react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Axios from 'axios';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Modal, Form, Input, Select, Upload, message } from 'antd';\nimport { editorConfig } from './EdittorConfig';\nimport '../../assets/css/blog.css';\nimport { Link } from 'react-router-dom';\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst getBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n\nconst App_blog = () => {\n  const [editorContent, setEditorContent] = useState('');\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [tenbenh, settenbenh] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('');\n  const [previewImage, setPreviewImage] = useState('');\n  const [hinhanh, sethinhanh] = useState('');\n  const [trieuchung, settrieuchung] = useState('');\n  const [nguyennhan, setnguyennhan] = useState('');\n  const [phongngua, setphongngua] = useState('');\n  const [noidung, setnoidung] = useState('');\n  const [idLoaibenh, setidLoaibenh] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [tenrieng, settenrieng] = useState('');\n\n\n  const handleImageUpload2 = async (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('upload_preset', 'aoxxeyys');\n    try {\n      const response = await Axios.post(\n        'https://api.cloudinary.com/v1_1/drhcszyj0/image/upload',\n        formData\n      );\n      if (response.status === 200) {\n        const imgBlog = response.data.secure_url;\n        sethinhanh(imgBlog);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleEditorChange = (newContent) => {\n    setEditorContent(newContent);\n  };\n  const normFile = (e) => {\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n  const handleFileChange02 = (e) => {\n    const file = e.target.files[0];\n    handleImageUpload2(file);\n  };\n  const handleCancel = () => setPreviewOpen(false);\n  const handlePreview = async (file) => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n    setPreviewImage(file.url || file.preview);\n    setPreviewOpen(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n  };\n  // \n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    handleImageUpload(file);\n  };\n  const handleImageUpload = async (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('upload_preset', 'aoxxeyys');\n    try {\n      const response = await Axios.post(\n        'https://api.cloudinary.com/v1_1/drhcszyj0/image/upload',\n        formData\n      );\n      if (response.status === 200) {\n        const imageUrl = response.data.secure_url;\n        const imageTag = `<img src=\"${imageUrl}\" alt=\"\" />`;\n        const newContent = editorContent + imageTag;\n        setEditorContent(newContent);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleVideoUpload = async (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('upload_preset', 'aoxxeyys');\n    try {\n      const response = await Axios.post(\n        'https://api.cloudinary.com/v1_1/drhcszyj0/video/upload',\n        formData\n      );\n      if (response.status === 200) {\n        const videoUrl = response.data.secure_url;\n        const videoTag = `<video style=\"width: 700px\"; src=\"${videoUrl}\" controls/>`;\n        const newContent = editorContent + videoTag;\n        setEditorContent(newContent);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleVideoChange = (e) => {\n    const file = e.target.files[0];\n    handleVideoUpload(file);\n  };\n  const handleSubmit = async () => {\n    try {\n      // Send data to the Node.js server\n      const response = await Axios.post('http://localhost:5090/api/thembenh', {\n        tenbenh,\n        hinhanh,\n        trieuchung,\n        nguyennhan,\n        phongngua,\n        noidung: editorContent,\n        idLoaibenh,\n        tenrieng, // You can set the value of tenrieng here if needed.\n      });\n\n      // Handle success response\n      if (response.status === 200) {\n        message.success('Data inserted successfully.');\n        // Clear the form after successful submission\n        settenbenh('');\n        sethinhanh('');\n        settrieuchung('');\n        setnguyennhan('');\n        setphongngua('');\n        setnoidung('');\n        setidLoaibenh('');\n        settenrieng('');\n        setEditorContent('');\n      }\n    } catch (error) {\n      // Handle error response\n      console.error('Error inserting data:', error);\n      message.error('An error occurred while inserting data.');\n    }\n  };\n\n  const [selectOptions, setSelectOptions] = useState([]);\n\n  // Fetch the data for the <Select> options from the server\n  // useEffect(() => {\n  //   const fetchSelectOptions = async () => {\n  //     try {\n  //       const response = await Axios.get('http://localhost:5090/api/loaibenhs'); // Replace with the appropriate API endpoint to get the options\n  //       if (response.status === 200) {\n  //         setSelectOptions(response.data); // Assuming the response data is an array of objects with `value` and `label` properties\n  //       }\n  //     } catch (error) {\n  //       console.error('Error fetching select options:', error);\n  //     }\n  //   };\n  //   fetchSelectOptions();\n  // }, []);\n\n  useEffect(() => {\n    Axios.get('http://localhost:5090/api/loaibenhs')\n      .then((response) => {\n        setSelectOptions(response.data);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  const handState = (value) => {\n    setidLoaibenh(value);\n  };\n\n  const handngyennhan = (value) => {\n    setnguyennhan(value);\n  };\n\n  const handphongngua = (value) => {\n    setphongngua(value);\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-10 m-auto\">\n          <div className=\"card card-body mt-5\">\n            <h2 className=\"text-center\">Create a Blog</h2>\n            <div className=\"form-group\">\n              <label>Title Blog</label>\n              <Form.Item>\n                <Input type=\"text\" placeholder=\"Blog title\" value={tenbenh} onChange={(e) => settenbenh(e.target.value)} required />\n              </Form.Item>\n            </div>\n            <div className=\"form-group\">\n              <label>ten reigng</label>\n              <Form.Item>\n                <Input type=\"text\" placeholder=\"Blog title\" value={tenrieng} onChange={(e) => settenrieng(e.target.value)} required />\n              </Form.Item>\n            </div>\n            <div className=\"form-group\">\n              <label>Trạng thái</label>\n              <Form.Item>\n                <Select onChange={handState} value={idLoaibenh} placeholder=\"Chọn trạng thái\">\n                  {selectOptions.map((option) => (\n                    <Option key={option.idLoaibenh} value={option.idLoaibenh}>\n                      {option.tenloaibenh}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </div>\n            <div className=\"form-group\">\n              <label>Img Blog</label>\n              <Form.Item valuePropName=\"fileList\" getValueFromEvent={normFile} onChange={handleFileChange02}>\n                <Upload src={hinhanh} listType=\"picture-card\" className=\"avatar-uploader\" maxCount={1} beforeUpload={handleFileChange02} onPreview={handlePreview}>\n                  <div>\n                    <PlusOutlined />\n                    <div style={{ marginTop: 8, }} > Img Blog </div>\n                  </div>\n                </Upload>\n                <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\n                  <img alt=\"example\" style={{ width: '100%', }} src={previewImage} />\n                </Modal>\n              </Form.Item>\n            </div>\n            <div className=\"form-group\">\n              <label>Triệu chứng</label>\n              <TextArea rows={4} className=\"form-control\" placeholder=\"Enter description\" value={trieuchung} onChange={(e) => settrieuchung(e.target.value)} required />\n            </div>\n            <div className=\"form-group\">\n              <label>Nguyên nhân</label>\n              <JoditEditor rows={4} className=\"form-control\" placeholder=\"Enter description\" value={nguyennhan} onChange={handngyennhan} required />\n            </div>\n            <div className=\"form-group\">\n              <label>Phòng ngừa</label>\n              <JoditEditor rows={4} className=\"form-control\" placeholder=\"Enter description\" value={phongngua} onChange={handphongngua} required />\n            </div>\n            <div className=\"form-group\">\n              <label>Nội dung</label>\n              <Form.Item onChange={handleFileChange} valuePropName=\"fileList\" getValueFromEvent={normFile}>\n                <Upload src={imageUrl} listType=\"picture-card\" className=\"avatar-uploader\" beforeUpload={handleFileChange} onPreview={handlePreview}>\n                  <div>\n                    <PlusOutlined />\n                    <div style={{ marginTop: 8, }} >\n                      <label>Img</label>\n                    </div>\n                  </div>\n                </Upload>\n                <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\n                  <img alt=\"example\" style={{ width: '100%', }} src={previewImage} />\n                </Modal>\n              </Form.Item>\n              <Form.Item valuePropName=\"fileList\" getValueFromEvent={normFile} onChange={handleVideoChange}>\n                <Upload className=\"avatar-uploader\" listType=\"picture-card\" beforeUpload={handleVideoChange}>\n                  <div>\n                    <PlusOutlined />\n                    <div style={{ marginTop: 8 }}>Video</div>\n                  </div>\n                </Upload>\n              </Form.Item>\n              <JoditEditor value={editorContent} config={editorConfig} onChange={handleEditorChange} />\n            </div>\n            <div className=\"form-group\">\n              <button className=\"btn btn-primary\" onClick={handleSubmit}>\n                Create Blog\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App_blog","/Users/hoang/DOAN/medical_app/web/src/components/blog/EdittorConfig.jsx",[],[],"/Users/hoang/DOAN/medical_app/web/src/components/login/Signup.jsx",["70","71","72","73","74","75","76","77","78"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\n\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Modal, Form, Input, Select, Upload, message } from 'antd';\nimport '../../assets/css/login.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst Sinup = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [setpassword, setSetPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [Enterpassword, setEnterpassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [showPasswordset, sohwShowPassword] = useState(false);\n  const [powers, setpowers] = useState('');\n  const togglePasswordVisibility = () => { setShowPassword(!showPassword) };\n  const passwordInputType = showPassword ? 'text' : 'password';\n  const togglePasswordVisibilit = () => { sohwShowPassword(!showPasswordset) };\n  const passwordInput = showPasswordset ? 'text' : 'password';\n\n  const handState = (value) => {\n    setpowers(value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Kiểm tra password và setpassword giống nhau\n    if (email === \"\") {\n      setMessage('Email trống');\n      return;\n    } else if (!email.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/)) {\n      setMessage('Email không hợp lệ');\n      return;\n    } else if (!password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/)) {\n      setMessage('Mật khẩu phải chứa ít nhất một chữ cái thường, một chữ cái hoa và có độ dài tối thiểu là 8 ký tự.');\n      return;\n    } else if (password !== setpassword) {\n      setMessage('Mật khẩu không khớp.');\n      return;\n    }\n\n    try {\n      // Gửi yêu cầu POST đăng ký đến server\n      const response = await axios.post('http://localhost:5090/api/register', {\n        email,\n        password,\n        setpassword,\n        powers,\n      });\n\n      // Xử lý phản hồi từ server\n      if (response.status === 200) {\n        setMessage(response.data.message);\n      } else if (response.status === 409) {\n        setMessage(response.data.message);\n        console.log('chao2')\n      } else {\n        setMessage('Đã xảy ra lỗi. Vui lòng lại sau.');\n      }\n    } catch (error) {\n      console.error(error);\n      setMessage('Đã xảy ra lỗi. Vui lòng thử sau.');\n    }\n  };\n  return (\n    // <div>\n    //    {message && <p>{message}</p>}\n    //     <form >\n    //         <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" />\n    //         <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" />\n    //         <input type=\"password\" value={setpassword} onChange={(e) => setSetPassword(e.target.value)} placeholder=\"Confirm Password\" />\n    //         <input type=\"text\" value={quyenhan} onChange={(e) => setQuyenhan(e.target.value)} placeholder=\"Quyền hạn\" />\n    //         <button onClick={handleSubmit} type=\"submit\">Đăng ký</button>\n    //     </form>\n\n    // </div>\n    <div className=\"maincontainer \">\n      <div className=\"container-fluid\">\n        <div className=\"row no-gutter\">\n          {/* <div className=\"col-md-6 d-none d-md-flex bg-image\"></div> */}\n          <div className=\"col-md-0 bg-image\">\n            <div className=\"login d-flex align-items-center py-5\">\n              <div className=\"container \">\n                <div className=\"row\">\n                  <div className=\"col-lg-10 col-xl-7 mx-auto\">\n                    <h3 className=\"display-8 text-primary log_in_text\">Register an account !</h3>\n                    <h6 className=\"display-8 log_in_text\">{message && <p>{message}</p>}</h6>\n                    <form>\n                      <div className=\"mb-3\">\n                        <label className='test'>Email</label>\n                        <input type=\"email\" placeholder=\"Email address\" className=\"form-control input_login border-0 shadow-sm px-4\" value={email} onChange={(e) => setEmail(e.target.value)} />\n                      </div>\n                      <div className=\"mb-3\">\n                        <label className='test'>Password</label>\n                        <input type={passwordInputType} name=\"password\" className=\"input_login form-control  border-0 shadow-sm px-4 text-primary form-control-pass\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                        <p className='password-toggle-icon' onClick={togglePasswordVisibility}>\n                          {showPassword ? <EyeOutlined /> : <EyeInvisibleOutlined />}\n                        </p>\n                      </div>\n                      <div className=\"mb-3\">\n                        <label className='test'>Confirm Password</label>\n                        <input type={passwordInput} name=\"Enterpassword\" className=\"input_login form-control border-0 shadow-sm px-4 text-primary form-control-pass\" value={setpassword} onChange={(e) => setSetPassword(e.target.value)} placeholder=\"Confirm Password\" />\n                      </div>\n                      <div className=\"mb-3\">\n                        <label className='test'>Powers</label>\n                        <Form.Item >\n                          <Select\n                            onChange={handState}\n                            value={powers}\n                            placeholder=\"Storage location\"\n                            defaultValue=\"Study\"\n                            size=\"large\"\n                          >\n                            <Option value=\"1\" className=\"custom-option\">Admin</Option>\n                            <Option value=\"2\" className=\"custom-option\">User</Option>\n                          </Select>\n                        </Form.Item>\n                      </div>\n                      <div className=\"d-grid gap-2 mt-2\">\n                        <button onClick={handleSubmit} type=\"submit\" className=\"btn btn-primary\">Sign in</button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sinup;\n",{"ruleId":"79","severity":1,"message":"80","line":9,"column":10,"nodeType":"81","messageId":"82","endLine":9,"endColumn":18},{"ruleId":"79","severity":1,"message":"83","line":9,"column":20,"nodeType":"81","messageId":"82","endLine":9,"endColumn":31},{"ruleId":"79","severity":1,"message":"84","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":33},{"ruleId":"79","severity":1,"message":"85","line":4,"column":25,"nodeType":"81","messageId":"82","endLine":4,"endColumn":37},{"ruleId":"79","severity":1,"message":"86","line":4,"column":76,"nodeType":"81","messageId":"82","endLine":4,"endColumn":102},{"ruleId":"79","severity":1,"message":"87","line":35,"column":9,"nodeType":"81","messageId":"82","endLine":35,"endColumn":17},{"ruleId":"79","severity":1,"message":"88","line":55,"column":10,"nodeType":"81","messageId":"82","endLine":55,"endColumn":22},{"ruleId":"79","severity":1,"message":"89","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"90","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":14},{"ruleId":"79","severity":1,"message":"91","line":11,"column":12,"nodeType":"81","messageId":"82","endLine":11,"endColumn":23},{"ruleId":"79","severity":1,"message":"92","line":11,"column":25,"nodeType":"81","messageId":"82","endLine":11,"endColumn":39},{"ruleId":"79","severity":1,"message":"93","line":17,"column":12,"nodeType":"81","messageId":"82","endLine":17,"endColumn":17},{"ruleId":"79","severity":1,"message":"94","line":4,"column":53,"nodeType":"81","messageId":"82","endLine":4,"endColumn":59},{"ruleId":"79","severity":1,"message":"95","line":5,"column":24,"nodeType":"81","messageId":"82","endLine":5,"endColumn":38},{"ruleId":"79","severity":1,"message":"90","line":9,"column":10,"nodeType":"81","messageId":"82","endLine":9,"endColumn":14},{"ruleId":"79","severity":1,"message":"96","line":30,"column":10,"nodeType":"81","messageId":"82","endLine":30,"endColumn":17},{"ruleId":"79","severity":1,"message":"97","line":32,"column":20,"nodeType":"81","messageId":"82","endLine":32,"endColumn":31},{"ruleId":"79","severity":1,"message":"90","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":14},{"ruleId":"79","severity":1,"message":"98","line":6,"column":10,"nodeType":"81","messageId":"82","endLine":6,"endColumn":22},{"ruleId":"79","severity":1,"message":"99","line":7,"column":10,"nodeType":"81","messageId":"82","endLine":7,"endColumn":15},{"ruleId":"79","severity":1,"message":"100","line":7,"column":38,"nodeType":"81","messageId":"82","endLine":7,"endColumn":44},{"ruleId":"79","severity":1,"message":"101","line":7,"column":46,"nodeType":"81","messageId":"82","endLine":7,"endColumn":53},{"ruleId":"79","severity":1,"message":"102","line":11,"column":9,"nodeType":"81","messageId":"82","endLine":11,"endColumn":17},{"ruleId":"79","severity":1,"message":"103","line":19,"column":10,"nodeType":"81","messageId":"82","endLine":19,"endColumn":23},{"ruleId":"79","severity":1,"message":"104","line":19,"column":25,"nodeType":"81","messageId":"82","endLine":19,"endColumn":41},{"ruleId":"79","severity":1,"message":"105","line":25,"column":9,"nodeType":"81","messageId":"82","endLine":25,"endColumn":32},"no-unused-vars","'loggedIn' is assigned a value but never used.","Identifier","unusedVar","'setLoggedIn' is assigned a value but never used.","'Router' is defined but never used.","'UserOutlined' is defined but never used.","'DeliveredProcedureOutlined' is defined but never used.","'location' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'loginStatus' is assigned a value but never used.","'setLoginStatus' is assigned a value but never used.","'token' is assigned a value but never used.","'Option' is defined but never used.","'SearchOutlined' is defined but never used.","'noidung' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'PlusOutlined' is defined but never used.","'Modal' is defined but never used.","'Upload' is defined but never used.","'message' is defined but never used.","'TextArea' is assigned a value but never used.","'Enterpassword' is assigned a value but never used.","'setEnterpassword' is assigned a value but never used.","'togglePasswordVisibilit' is assigned a value but never used."]